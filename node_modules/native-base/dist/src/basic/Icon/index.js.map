{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["Icon","props","name","OS","active","ios","default","android","_root","c","getIconName","getName","propTypes","style","PropTypes","object","string","bool","StyledIcon"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\n\nimport { IconNB } from '../IconNB';\nimport ic from './NBIcons.json';\n\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\n\nclass Icon extends Component {\n\n  getName() {\n    if (typeof ic[this.props.name]!=='object' ) {\n      return this.props.name;\n    }\n    else if (typeof ic[this.props.name]==='object') {\n      let name;\n      if (Platform.OS === 'ios') {\n        name = (this.props.active) ? ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n      } else {\n        name = (this.props.active) ? ic[this.props.name].android.active : ic[this.props.name].android.default;\n      }\n      return name;\n    }\n  }\n\n  getIconName() {\n    if (Platform.OS === 'ios') {\n      if (this.props.ios) {\n        return this.props.ios;\n      } else {\n        return (this.props.active) ?\n        ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n      }\n    } else if(this.props.android) {\n      return this.props.android;\n    } else {\n      return (this.props.active) ?\n      ic[this.props.name].android.active : ic[this.props.name].android.default;\n    }\n  }\n\n  render() {\n    if (this.props.ios && this.props.android) {\n      return (\n        <IconNB ref={c => this._root = c} {...this.props} name={(Platform.OS === 'ios') ? this.props.ios : this.props.android} />\n      );\n    } else if (this.props.name && (this.props.android || this.props.ios)) {\n      return (\n        <IconNB ref={c => this._root = c} {...this.props} name={this.getIconName()} />\n      );\n    } else {\n      return (\n        <IconNB ref={c => this._root = c} {...this.props} name={this.getName()} />\n      );\n    }\n  }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: React.PropTypes.object,\n  name: React.PropTypes.string,\n  ios: React.PropTypes.string,\n  android: React.PropTypes.string,\n  active: React.PropTypes.bool,\n};\n\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(Icon);\n\nexport {\n  StyledIcon as Icon,\n};\n"]}