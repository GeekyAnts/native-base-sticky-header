{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","backgroundColor","props","checked","push","color","checkboxBgColor","_root","c","borderRadius","CheckboxRadius","overflow","width","checkboxSize","height","borderWidth","CheckboxBorderWidth","paddingLeft","CheckboxPaddingLeft","paddingBottom","CheckboxPaddingBottom","borderColor","getBackgroundColor","OS","propTypes","style","PropTypes","object","bool","StyledCheckBox"],"mappings":"kzBAAA,4B;AACA;AACA;AACA;AACA,mE;AACA,6C;;;AAGMA,Q;AACiB;AACnB,GAAMC,iBAAkB,CAAC,aAAD,CAAxB;AACA,GAAI,KAAKC,KAAL,CAAWC,OAAf,CAAwB;AACtBF,gBAAgBG,IAAhB,CAAsB,KAAKF,KAAL,CAAWG,KAAZ,CAAqB,KAAKH,KAAL,CAAWG,KAAhC,CAAwC,oBAASC,eAAtE;AACD,CAFD,IAEO;AACLL,gBAAgBG,IAAhB,CAAqB,aAArB;AACD;AACD,MAAOH,iBAAgB,CAAhB,CAAP;AACD,C;AACQ;AACP;AACE;AACE,IAAK,sBAAK,QAAKM,KAAL,CAAaC,CAAlB,EADP;AAEM,KAAKN,KAFX;AAGE,MAAO;AACLO,aAAc,oBAASC,cADlB;AAELC,SAAU,QAFL;AAGLC,MAAO,oBAASC,YAHX;AAILC,OAAQ,oBAASD,YAJZ;AAKLE,YAAa,oBAASC,mBALjB;AAMLC,YAAa,oBAASC,mBAAT,CAA+B,CANvC;AAOLC,cAAe,oBAASC,qBAPnB;AAQLC,YAAa,KAAKnB,KAAL,CAAWG,KAAX,CAAmB,KAAKH,KAAL,CAAWG,KAA9B,CAAsC,oBAASC,eARvD;AASLL,gBAAiB,KAAKqB,kBAAL,EATZ,CAHT;;;AAeE,8CAAQ,KAAO,sBAASC,EAAT,GAAgB,KAAjB,CAA0B,uBAA1B,CAAoD,cAAlE,EAfF,CADF;;;AAmBD,C;;;AAGHvB,SAASwB,SAAT;AACK,8BAAiBA,SADtB;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;AAGExB,QAAS,gBAAMuB,SAAN,CAAgBE,IAH3B;;;AAMA,GAAMC,gBAAiB,wBAAa,qBAAb,CAAoC,EAApC,iCAA8D7B,QAA9D,CAAvB,C;;;AAGoBA,Q,CAAlB6B,c","file":"Checkbox.js","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { IconNB } from './IconNB';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables';\n\n\nclass CheckBox extends Component {\n  getBackgroundColor() {\n    const backgroundColor = ['transparent'];\n    if (this.props.checked) {\n      backgroundColor.push((this.props.color) ? this.props.color : variable.checkboxBgColor);\n    } else {\n      backgroundColor.push('transparent');\n    }\n    return backgroundColor[1];\n  }\n  render() {\n    return (\n      <TouchableOpacity\n        ref={c => this._root = c}\n        {...this.props}\n        style={{\n          borderRadius: variable.CheckboxRadius,\n          overflow: 'hidden',\n          width: variable.checkboxSize,\n          height: variable.checkboxSize,\n          borderWidth: variable.CheckboxBorderWidth,\n          paddingLeft: variable.CheckboxPaddingLeft - 1,\n          paddingBottom: variable.CheckboxPaddingBottom,\n          borderColor: this.props.color ? this.props.color : variable.checkboxBgColor,\n          backgroundColor: this.getBackgroundColor()\n        }}\n        >\n        <IconNB name={(Platform.OS === 'ios') ? 'ios-checkmark-outline' : 'md-checkmark'} />\n      </TouchableOpacity>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: React.PropTypes.object,\n  checked: React.PropTypes.bool,\n};\n\nconst StyledCheckBox = connectStyle('NativeBase.CheckBox', {}, mapPropsToStyleNames)(CheckBox);\n\nexport {\n  StyledCheckBox as CheckBox,\n};\n"]}